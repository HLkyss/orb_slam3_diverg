%YAML:1.0

#--------------------------------------------------------------------------------------------
# Camera Parameters. Adjust them!
#--------------------------------------------------------------------------------------------
Camera.type: "KannalaBrandt8"
#Camera.type: "PinHole"

##单目结果 with 100 imgs
Camera.fx: 338.26444805845614
Camera.fy: 338.22671753110313
Camera.cx: 539.6276140481119
Camera.cy: 539.6498342910747
Camera.k1: 0.012148234760416508
Camera.k2: 0.007119738208403162
Camera.k3: -0.008916250501096921
Camera.k4: 0.0017563773920103935

Camera2.fx: 338.26444805845614
Camera2.fy: 338.22671753110313
Camera2.cx: 539.6276140481119
Camera2.cy: 539.6498342910747
Camera2.k1: 0.012148234760416508
Camera2.k2: 0.007119738208403162
Camera2.k3: -0.008916250501096921
Camera2.k4: 0.0017563773920103935

###单目结果 with 200 imgs
#Camera.fx: 338.07308923668694
#Camera.fy: 338.0222574825245
#Camera.cx: 539.5536801190282
#Camera.cy: 539.6999506695925
#Camera.k1: 0.0157469237607626
#Camera.k2: 0.0006549177974145452
#Camera.k3: -0.0046316700005802
#Camera.k4: 0.0008274212153369233
#
#Camera2.fx: 338.07308923668694
#Camera2.fy: 338.0222574825245
#Camera2.cx: 539.5536801190282
#Camera2.cy: 539.6999506695925
#Camera2.k1: 0.0157469237607626
#Camera2.k2: 0.0006549177974145452
#Camera2.k3: -0.0046316700005802
#Camera2.k4: 0.0008274212153369233

#单目结果 120 side
#Camera.fx: 337.11318075518625
#Camera.fy: 336.2870525482959
#Camera.cx: 537.273081289227
#Camera.cy: 539.2328899068924
#Camera.k1: 0.04185687217496911
#Camera.k2: -0.0312544096173528
#Camera.k3: 0.011112492681250617
#Camera.k4: -0.001908197264794881
#
#Camera2.fx: 337.77078739703364
#Camera2.fy: 336.9991746044577
#Camera2.cx: 541.8879274880616
#Camera2.cy: 539.8787479958195
#Camera2.k1: 0.03537452979479512
#Camera2.k2: -0.02464287359151417
#Camera2.k3: 0.008308699945860313
#Camera2.k4: -0.0014746764126536119

# Transformation matrix from right camera to left camera /media/hl/Stuff/ubuntu_share_2/Dataset/ue_180/calib/get_t.py
Tlr: !!opencv-matrix
  rows: 3
  cols: 4
  dt: f

#  # 0
#  data: [ 1.0, 0.0, 0.0, 0.2,
#          0.0, 1.0, 0.0, 0.0,
#          0.0, 0.0, 1.0, 0.0]

   # 10  标定双目 逆矩阵 可用
#  data: [ 9.39783305e-01, -2.62070597e-04,  3.41770788e-01,  1.98505470e-01,
#          6.95988844e-05,  9.99999832e-01,  5.75422742e-04,  4.25771688e-05,
#          -3.41770881e-01, -5.16985820e-04,  9.39783165e-01, -2.36744195e-02 ]
# # 计算真实值
#  data: [ 0.93969262, 0.0,  0.34202014,  0.1969615506,
#          0.0,  1.0,  0.0,  0.0,
#          -0.34202014, 0.0,  0.93969262, -0.0347296 ]

#  # 20  标定双目 逆矩阵 可用
#  data: [ 7.66053177e-01, -1.03705656e-03,  6.42776364e-01,  1.95751178e-01,
#          9.23732142e-05,  9.99998866e-01,  1.50331071e-03,  8.32315802e-04,
#          -6.42777194e-01, -1.09224063e-03,  7.66052404e-01, -4.77782830e-02 ]
# # 计算真实值
#  data: [ 0.76604444, 0.0,  0.64278761,  0.18794,
#          0.0,  1.0,  0.0,  0.0,
#          -0.64278761, 0.0,  0.76604444, -0.0684 ]

#  # 30  标定双目 逆矩阵
#  data: [ 5.00969280e-01, -1.54670197e-03,  8.65463684e-01,  1.89477633e-01,
#          1.31448056e-05,  9.99998417e-01,  1.77952513e-03,  9.79052081e-04,
#          -8.65465066e-01, -8.80111073e-04,  5.00968507e-01, -7.26362658e-02 ]
#  # 计算真实值
#  data: [ 0.5, 0.0,  0.8660254,  0.1732,
#          0.0,  1.0,  0.0,  0.0,
#          -0.8660254, 0.0,  0.5, -0.1 ]

  # 40  标定双目 逆矩阵 可用
#  data: [ 1.75081543e-01, -1.84598774e-03,  9.84552206e-01,  1.80984402e-01,
#          4.78255417e-05,  9.99998257e-01,  1.86644359e-03,  8.05397351e-04,
#          -9.84553935e-01, -2.79693082e-04,  1.75081326e-01, -9.50821838e-02]
#  # 计算真实值
#  data: [ 0.17364818, 0.0,  0.98480775,  0.1532,
#          0.0,  1.0,  0.0,  0.0,
#          -0.98480775, 0.0,  0.17364818, -0.1286 ]

# 50
#  # 计算真实值
#  data: [ -0.17364818, 0.0,  0.98480775,  0.1286,
#          0.0,  1.0,  0.0,  0.0,
#          -0.98480775, 0.0,  -0.17364818, -0.1532 ]

# 60
# # 标定
#  data: [ -5.08303790e-01, -8.56455787e-04,  8.61177405e-01,  1.43893191e-01,
#          -5.76039517e-04,  9.99999620e-01,  6.54513678e-04,  2.36400729e-03,
#          -8.61177638e-01, -1.63380433e-04, -5.08304090e-01, -1.46467979e-01]
  #  # 计算真实值
  data: [ -0.5, 0.0,  0.8660254,  0.1,
          0.0,  1.0,  0.0,  0.0,
          -0.8660254, 0.0,  -0.5, -0.1732 ]


# 70
  # 计算真实值
#  data: [ -0.76604444, 0.0,  0.64278761,  0.06840403,
#          0.0,  1.0,  0.0,  0.0,
#          -0.64278761, 0.0,  -0.76604444, -0.1879385 ]

# 80
#  # 计算真实值
#  data: [ -0.93969262, 0.0,  0.34202014,  0.03473,
#          0.0,  1.0,  0.0,  0.0,
#          -0.34202014, 0.0,  -0.93969262, -0.19696 ]

# Lapping area between images (We must calculate) TODO 重叠区域计算，https://github.com/UZ-SLAMLab/ORB_SLAM3/issues/88
Camera.lappingBegin: 0
Camera.lappingEnd: 1080 # 1000

Camera2.lappingBegin: 0
Camera2.lappingEnd: 1080 #设置小了的话，发现运行会失败。可能需要好好标定一下？ 我操了，70度的情况，搞了半天，结果从900改回1000一下就好了

# Camera resolution
Camera.width: 1080
Camera.height: 1080

# Camera frames per second 
Camera.fps: 20.0

# Color order of the images (0: BGR, 1: RGB. It is ignored if images are grayscale)
Camera.RGB: 1

# Image scale, it changes the image size to be processed (<1.0: reduce, >1.0: increase)
#Camera.imageScale: 0.7071 # 1/sqrt(2)

# Close/Far threshold. Baseline times.
ThDepth: 20.0 #  40 深度阈值，不是一个精确的数值，大概预估的，可以不改动，要改的话参考下述公式:
  #自己粗略估计一个相机可以良好显示的最大距离值为s = 10  如果fx = 100 Camera.bf = 20
  #那么 ThDepth = s*fx/Camera.bf = 10 *100 /20 = 50
  #将你自己的参数带入上述公式 可以得到大概的阈值。
  #双目关键点的深度如果小于ThDepth倍基线长度的值，就被叫做近关键点，否则就是远关键点。近关键点可以较好的被三角化，并提供尺度，平移，旋转信息。而远关键点可以提供比较好的旋转信息，但只能有比较差的尺度和平移信息，远点用多视角进行三角化。https://blog.csdn.net/catpico/article/details/120688795
Camera.bf: 67.6 # 基线距离（单位：米） * fx（单位：像素） 0.2*338

thFarPoints: 40.0

#--------------------------------------------------------------------------------------------
# ORB Parameters
#--------------------------------------------------------------------------------------------

# ORB Extractor: Number of features per image
ORBextractor.nFeatures: 4000 # Tested with 1250   1000

# ORB Extractor: Scale factor between levels in the scale pyramid 	
ORBextractor.scaleFactor: 1.2

# ORB Extractor: Number of levels in the scale pyramid	
ORBextractor.nLevels: 8 #8

# ORB Extractor: Fast threshold
# Image is divided in a grid. At each cell FAST are extracted imposing a minimum response.
# Firstly we impose iniThFAST. If no corners are detected we impose a lower value minThFAST
# You can lower these values if your images have low contrast			
ORBextractor.iniThFAST: 25 # 20  15 初始阶段的FAST特征点提取的阈值。（增大该值可能会导致更少的特征点被提取，而减小该值可能会导致更多的特征点被提取。） todo 不太对，好像是这个值越大，提取的特征点越多
ORBextractor.minThFAST: 5 # 7 用于跟踪阶段的FAST特征点提取的阈值

#--------------------------------------------------------------------------------------------
# Viewer Parameters
#--------------------------------------------------------------------------------------------
Viewer.KeyFrameSize: 0.05
Viewer.KeyFrameLineWidth: 1
Viewer.GraphLineWidth: 0.9
Viewer.PointSize: 2
Viewer.CameraSize: 0.08
Viewer.CameraLineWidth: 3
Viewer.ViewpointX: 0
Viewer.ViewpointY: -0.7
Viewer.ViewpointZ: -3.5
Viewer.ViewpointF: 500
